<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Medicine Search</title> 
    <div>
        <a style="text-align: left;" href="Hackathon.html">Go back</a>
        <a style ="text-align: right;" href = "Cart.html">Move to cart</a>
    </div>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f7f8fc;
            margin: 0;
            padding: 20px;
        }
        h1 {
            text-align: center;
            font-size: 2.5rem;
            color: #333;
            margin-bottom: 20px;
        }
        #search {
            display: block;
            margin: 0 auto 20px auto;
            padding: 12px 20px;
            width: 60%;
            font-size: 16px;
            border: 1px solid #ddd;
            border-radius: 25px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            transition: box-shadow 0.3s ease;
        }
        #search:focus {
            outline: none;
            box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        }
        table {
            width: 100%;
            border-collapse: collapse;
            background-color: #fff;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        }
        th, td {
            padding: 16px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        th {
            background-color: #4CAF50;
            color: white;
            font-weight: bold;
        }
        td {
            color: #333;
        }
        tr:hover {
            background-color: #f1f1f1;
        }
        tr:last-child td {
            border-bottom: none;
        }
        button {
            padding: 8px 12px;
            font-size: 14px;
            color: #fff;
            background-color: #4CAF50;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
        button:hover {
            background-color: #45a049;
        }
        .quantity {
            display: flex;
            align-items: center;
            gap: 10px;
        }
        .quantity span {
            display: inline-block;
            width: 60px;
            text-align: center;
            font-size: 18px;
        }
        .delete-btn {
            background-color: #f44336;
        }
        .delete-btn:hover {
            background-color: #d32f2f;
        }
        @media (max-width: 768px) {
            #search {
                width: 90%;
            }
            th, td {
                padding: 10px;
            }
            .quantity span {
                width: 50px;
                font-size: 16px;
            }
        }
    </style>
</head>
<body>

    <h1>Medicine List</h1>
    <input type="text" id="search" placeholder="Search for medicines..." onkeyup="searchMedicines()">

    <table id="medicine-table">
        <thead>
            <tr>
                <th>Medicine Name</th>
                <th>Composition</th>
                <th>Uses</th>
                <th>Side Effects</th>
                <th>Quantity</th>
            </tr>
        </thead>
        <tbody>
            <!-- Medicine rows will be injected here -->
        </tbody>
    </table>
    

    <script>
        // Store the quantity of each medicine
        const medicineQuantities = {};

        // Function to load CSV data and populate the table
        function loadCSVData() {
            fetch('Medicine_Details.csv') // Your CSV file
                .then(response => response.text())
                .then(data => {
                    const tableBody = document.querySelector('#medicine-table tbody');
                    const rows = data.split('\n');
                    rows.forEach((row, index) => {
                        if (index === 0) return; // Skip header row
                        const cols = row.split(',');
                        if (cols.length >= 6) { // Ensure the first six columns exist
                            const tr = document.createElement('tr');

                            // Create table cells for each column
                            let td = document.createElement('td');
                            td.textContent = cols[0].trim(); // Medicine Name
                            tr.appendChild(td);

                            td = document.createElement('td');
                            td.textContent = cols[1].trim(); // Composition
                            tr.appendChild(td);

                            td = document.createElement('td');
                            td.textContent = cols[2].trim(); // Uses
                            tr.appendChild(td);

                            td = document.createElement('td');
                            td.textContent = cols[3].trim(); // Side Effects
                            tr.appendChild(td);

                            // Add quantity column with "Add 1" and "Delete 1" buttons
                            td = document.createElement('td');
                            const div = document.createElement('div');
                            div.className = 'quantity';

                            // "Add 1" button
                            const addBtn = document.createElement('button');
                            addBtn.textContent = 'Add';
                            addBtn.setAttribute('data-medicine', cols[0].trim());
                            addBtn.onclick = incrementQuantity;
                            div.appendChild(addBtn);

                            // Quantity display
                            const qtySpan = document.createElement('span');
                            qtySpan.textContent = '0';
                            div.appendChild(qtySpan);

                            // "Delete 1" button
                            const delBtn = document.createElement('button');
                            delBtn.textContent = 'Delete';
                            delBtn.className = 'delete-btn';
                            delBtn.setAttribute('data-medicine', cols[0].trim());
                            delBtn.onclick = decrementQuantity;
                            div.appendChild(delBtn);

                            td.appendChild(div);
                            tr.appendChild(td);

                            // Store the initial quantity of 0
                            medicineQuantities[cols[0].trim()] = 0;

                            tableBody.appendChild(tr);
                        }
                    });
                })
                .catch(error => console.error('Error loading CSV:', error));
        }

        // Function to increment quantity
        function incrementQuantity(event) {
            const medicineName = event.target.getAttribute('data-medicine');
            const qtySpan = event.target.nextElementSibling;

            // Increment quantity and update the span text
            medicineQuantities[medicineName] += 1;
            qtySpan.textContent = medicineQuantities[medicineName];
        }

        // Function to decrement quantity
        function decrementQuantity(event) {
            const medicineName = event.target.getAttribute('data-medicine');
            const qtySpan = event.target.previousElementSibling;

            // Decrement quantity and update the span text, ensuring it doesn't go below 0
            if (medicineQuantities[medicineName] > 0) {
                medicineQuantities[medicineName] -= 1;
            }
            qtySpan.textContent = medicineQuantities[medicineName];
        }

        // Function to search through the medicines
        function searchMedicines() {
            const input = document.getElementById('search').value.toLowerCase();
            const table = document.getElementById('medicine-table');
            const rows = table.getElementsByTagName('tr');

            for (let i = 1; i < rows.length; i++) { // Start from 1 to skip the table header
                const cols = rows[i].getElementsByTagName('td');
                let match = false;
                for (let j = 0; j < cols.length - 1; j++) { // Exclude quantity column
                    const txtValue = cols[j].textContent || cols[j].innerText;
                    if (txtValue.toLowerCase().indexOf(input) > -1) {
                        match = true;
                        break;
                    }
                }
                rows[i].style.display = match ? "" : "none";
            }
        }

        // Load the CSV data when the page loads
        window.onload = loadCSVData;
    </script>

</body>
</html>
